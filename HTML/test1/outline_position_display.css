*{
	box-sizing: border-box;
	padding: 0;
	margin: 0;
	font-weight: 100px;
	font-size: 30px;
}

/*.caja1{
	width: 200px;
	height: 200px;
	background: red;
	/*margin auto la centra en la pagina horizontalmente*/
/*	margin: auto;
	border: 10px solid blue;
	/*box-sizing: content-box;  me suma el total de los propiedades dades margin + border Â´+ content*/
/*	box-sizing: content-box;
}

.caja2{
	width: 200px;
	height: 200px;
	background: yellow;
	margin: auto;
	/*outline es un borde que no ocupa espacio, sirve para marcar elelmentos
	la caj sigue midiendo lo mismo no se suma el outline a las medidas como si lo hace el border*/
/*	outline: 10px solid red;
}*/

/*ejemplo outline
div{
	width: 200px;
	height: 200px;
	background: yellow;
	display: inline-block;
}

la visual se ve en asi por el zindex
.caja1, .caja4{
	outline: 5px solid blue;
}*/

/*ejemplos position: posicionar el elemento, perdemos el flujo de html
	al posicionar un elemento adquiere 5 propiedades nuevas: top, left, bottom, right, z index
	static: No esta poscionado
	relative: conserva su espacio y su punto de referencia es el original Las propiedades top y left tienen mayor jerarquia*
	absolute: el espacio no se reserva y el punto de referencia es el contenedor o view port todo lo que se ve en l apantalla
	fixed: 
	sticky: 
	*/
/**
div{
	width: 120px;
	height: 120px;
	display: block;
	background: yellow;
}

.caja1{
	background: orange;
}

.caja2{
	background: green;
	/*conserva su espacio* y su punto de referencia es el original
	Las propiedades top y left tienen mayor hjrarquia*/
/*
	position: relative;
	top: 50px;
	left: 50px;
*/
	/*z-index solo funciona cuando la caja esta posicionada*/
/*
	z-index: 100;
}


.caja3{
	background: lightblue;
	/*conserva el efecto de cascada*/
/*	position: relative;
}

.caja4{
	background: yellow;
}
*/

/*ejemplo 2 la unica forma de colocar al hijo por debajo del padre es
que el al hijo le damos un valor de z-index de -1 y el padre no tener z-index*/
/*
.contenedor{
	width: 300px;
	height: 300px;
	background: blue;
	margin: 40px;
	position: relative;
}

.hijo{
	background: orange;
	width: 120px;
	height: 120px;
	position: relative;
	top: -20px;
	left: -20px;
	z-index: -1;
}
*/

/* ejemplo 3 position: absolute*/

div{
	display: block;
	background: green;
	position: absolute;
}
/*div que estan dentro de otro div, no afecta al contenedor en este ejemplo*/
div div{
	height: 100px;
	width: 100px;
	background: yellow;
}

.contenedor{
	/* si lo dejamos estatic las cajas se posicionan con respecto al la pantalla ya que no esta posicionado position: static; */
	position: relative;
	border: 4px solid red;
	margin: 50px auto;
	width: 450px;
	height: 450px;
}

.caja1{
	left: 0;
}

.caja2{
	/*en las 2 lineas siguientes es un ejemplo de que la caja no desaparece
	solo que esta por debajo de la tresopacit es la transparencia del elemento*/
	/*
	opacity: .5;
	margin-left: 300px;
	*/
	/*muevo la caja con respecto a su contenedor (por que este esta posicionado) a la derecha*/
	right: 0;
}


.caja3{
	/*muevo la caja con respecto a su contenedor (por que este esta posicionado) a la derecha y abajo*/
	right: 0;
	bottom: 0;
}

.caja4{
	/*muevo la caja con respecto a su contenedor (por que este esta posicionado) abajo*/
	bottom: 0;
}

.caja5{
	/*centrar una caja*/
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
	margin: auto;
}